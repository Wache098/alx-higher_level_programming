# Test cases for add_integer function

# Valid inputs: integers
>>> add_integer(2, 3)
5

>>> add_integer(-5, 10)
5

>>> add_integer(0, 0)
0

# Valid inputs: floats (should be cast to integers)
>>> add_integer(2.5, 3)
5

>>> add_integer(2, 3.5)
5

>>> add_integer(2.5, 3.5)
5

# Invalid inputs: strings
>>> add_integer('a', 3)
Traceback (most recent call last):
    ...
TypeError: a must be an integer or b must be an integer

>>> add_integer(2, 'b')
Traceback (most recent call last):
    ...
TypeError: a must be an integer or b must be an integer

>>> add_integer(2.5, 'b')
Traceback (most recent call last):
    ...
TypeError: a must be an integer or b must be an integer

# Missing argument
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'

# Too many arguments
>>> add_integer(2, 3, 4)
Traceback (most recent call last):
    ...
TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given

# Boundary case: large integers
>>> add_integer(999999999999999999, 1)
1000000000000000000

# Boundary case: large negative integers
>>> add_integer(-999999999999999999, -1)
-1000000000000000000

# Edge case: zero
>>> add_integer(0, 0)
0

# Edge case: large floating-point numbers (should be cast to integers)
>>> add_integer(1.999999999999999, 2)
3

>>> add_integer(2, 1.999999999999999)
3

# Edge case: negative floating-point numbers (should be cast to integers)
>>> add_integer(-1.999999999999999, 2)
0

>>> add_integer(2, -1.999999999999999)
0


